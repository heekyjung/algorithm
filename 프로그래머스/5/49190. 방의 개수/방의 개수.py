def solution(arrows):
    graph = {(0, 0): []} # 시작점 (0,0)
    move = {
        0: [0, 1],
        1: [1, 1],
        2: [1, 0],
        3: [1, -1],
        4: [0, -1],
        5: [-1, -1],
        6: [-1, 0],
        7: [-1, 1]
    }
    
    room = 0
    x, y = 0, 0
    
    # print((0, 0) in graph) -> True
    # print((1, 0) in graph) -> False
    
    for arr in arrows:
        for _ in range(2):
            nx, ny = x + move[arr][0], y + move[arr][1]
            if (nx, ny) in graph and (x, y) not in graph[(nx, ny)]:
                room += 1
                graph[(nx, ny)].append((x, y))
                graph[(x, y)].append((nx, ny))
            elif (nx, ny) not in graph:
                graph[(nx, ny)] = [(x, y)]
                graph[(x, y)].append((nx, ny))
            
            x, y = nx, ny
    
    # print(graph)
    
    return room

'''
graph = {
(0, 0): [(-1, 0), (0, -1), (1, 1)], 
(-1, 0): [(0, 0), (-2, 0)], 
(-2, 0): [(-1, 0), (-3, 0), (-1, 1), 
(-3, -1)], (-3, 0): [(-2, 0), (-4, 0)], (-4, 0): [(-3, 0), (-5, 0)], (-5, 0): [(-4, 0), (-6, 0)], (-6, 0): [(-5, 0), (-6, -1)], (-6, -1): [(-6, 0), (-6, -2)], (-6, -2): [(-6, -1), (-6, -3)], (-6, -3): [(-6, -2), (-6, -4)], (-6, -4): [(-6, -3), (-6, -5)], (-6, -5): [(-6, -4), (-6, -6)], (-6, -6): [(-6, -5), (-5, -6)], (-5, -6): [(-6, -6), (-4, -6)], (-4, -6): [(-5, -6), (-3, -6)], (-3, -6): [(-4, -6), (-2, -6)], (-2, -6): [(-3, -6), (-1, -6)], (-1, -6): [(-2, -6), (0, -6)], (0, -6): [(-1, -6), (0, -5)], (0, -5): [(0, -6), (0, -4)], (0, -4): [(0, -5), (0, -3)], (0, -3): [(0, -4), (0, -2)], (0, -2): [(0, -3), (0, -1)], (0, -1): [(0, -2), (0, 0)], (1, 1): [(0, 0), (2, 2)], (2, 2): [(1, 1), (1, 2)], (1, 2): [(2, 2), (0, 2)], (0, 2): [(1, 2), (-1, 1)], (-1, 1): [(0, 2), (-2, 0)], (-3, -1): [(-2, 0), (-4, -2)], (-4, -2): [(-3, -1), (-3, -3), (-4, -3)], (-3, -3): [(-4, -2), (-2, -4)], (-2, -4): [(-3, -3), (-3, -4)], (-3, -4): [(-2, -4), (-4, -4)], (-4, -4): [(-3, -4), (-4, -3)], (-4, -3): [(-4, -4), (-4, -2)]
}
'''