def solution(arrows):
    graph = {(0, 0): []} # 시작점 (0,0)
    move = {
        0: [0, 1],
        1: [1, 1],
        2: [1, 0],
        3: [1, -1],
        4: [0, -1],
        5: [-1, -1],
        6: [-1, 0],
        7: [-1, 1]
    }
    
    room = 0
    x, y = 0, 0
    
    # print((0, 0) in graph) -> True
    # print((1, 0) in graph) -> False
    
    for arr in arrows:
        for _ in range(2):
            nx, ny = x + move[arr][0], y + move[arr][1]
            if (nx, ny) in graph and (x, y) not in graph[(nx, ny)]:
                room += 1
                graph[(nx, ny)].append((x, y))
                graph[(x, y)].append((nx, ny))
            elif (nx, ny) not in graph:
                graph[(nx, ny)] = [(x, y)]
                graph[(x, y)].append((nx, ny))
            
            x, y = nx, ny
    
    #print(graph)
    
    return room

'''
graph
{
(0, 0): [(-1, 0), (0, -1), (1, 1)], 
(-1, 0): [(0, 0), (-2, 0), (0, 1), (-2, -1)], 
(-2, 0): [(-1, 0), (-3, 0)], 
(-3, 0): [(-2, 0), (-3, -1)], 
(-3, -1): [(-3, 0), (-3, -2)],
(-3, -2): [(-3, -1), (-3, -3)], 
(-3, -3): [(-3, -2), (-2, -3)], 
(-2, -3): [(-3, -3), (-1, -3)], 
(-1, -3): [(-2, -3), (0, -3)], 
(0, -3): [(-1, -3), (0, -2)], 
(0, -2): [(0, -3), (0, -1)], 
(0, -1): [(0, -2), (0, 0)], 
(1, 1): [(0, 0), (0, 1)], 
(0, 1): [(1, 1), (-1, 0)], 
(-2, -1): [(-1, 0), (-1, -2), (-2, -2)], 
(-1, -2): [(-2, -1), (-2, -2)], 
(-2, -2): [(-1, -2), (-2, -1)]}
'''